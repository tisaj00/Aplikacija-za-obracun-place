/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tisaj.obracunplace.view;

import java.awt.Toolkit;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import tisaj.obracunplace.controller.ObradaIsplata;
import tisaj.obracunplace.controller.ObradaObracun;
import tisaj.obracunplace.controller.ObradaRadnik;
import tisaj.obracunplace.controller.ObradaVrstaPrimanja;
import tisaj.obracunplace.model.Isplata;
import tisaj.obracunplace.model.Obracun;
import tisaj.obracunplace.model.Radnik;
import tisaj.obracunplace.model.VrstaPrimanja;
import tisaj.obracunplace.pomocno.ObracunPlaceException;

/**
 *
 * @author Josip
 */
public class Obracuni extends javax.swing.JFrame {

    private final ObradaObracun obradaEntitet;
    private final ObradaRadnik obradaRadnik;
    private static DefaultComboBoxModel<Radnik> modelRadnik;
    private static DefaultComboBoxModel<Isplata> modelIsplata;
    private static DefaultComboBoxModel<VrstaPrimanja> modelVrstaPrimanja;
    private Obracun obracun;

    /**
     * Creates new form Obracuni
     */
    public Obracuni() {
        initComponents();
        obradaEntitet = new ObradaObracun();
        obradaRadnik = new ObradaRadnik();

        DefaultComboBoxModel<VrstaPrimanja> ms = new DefaultComboBoxModel<>();
        VrstaPrimanja vp = new VrstaPrimanja();
        vp.setId(0);
        vp.setNazivVrstePrimanja("Odaberite vrstu primanja");
        ms.addElement(vp);
        new ObradaVrstaPrimanja().getLista().forEach((s) -> {
            ms.addElement(s);
        });
        cmbVrstaPrimanja.setModel(ms);

        DefaultComboBoxModel<Isplata> i = new DefaultComboBoxModel<>();
        Isplata ii = new Isplata();
        ii.setId(0);
        ii.setNazivIsplate("Odaberite naziv isplate");
        i.addElement(ii);
        new ObradaIsplata().getLista().forEach((is) -> {
            i.addElement(is);
        });
        cmbIsplata.setModel(i);

        DefaultComboBoxModel<Radnik> r = new DefaultComboBoxModel<>();
        Radnik rr = new Radnik();

        rr.setIme("Odaberite");
        rr.setPrezime("radnika");
        rr.setSpol("");
        rr.setOib("");
        r.addElement(rr);
        new ObradaRadnik().getLista().forEach((rad) -> {
            r.addElement(rad);
        });
        cmbRadnik.setModel(r);

        ucitajPodatke();
        ucitajRadnike();
        seticon();
    }

    private void ucitajPodatke() {
        DefaultListModel<Obracun> m = new DefaultListModel<>();
        obradaEntitet.getLista().forEach((o) -> {
            m.addElement(o);
        });
        lstEntiteti.setModel(m);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstRadnici = new javax.swing.JList<>();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        txtUvjet = new javax.swing.JTextField();
        chbLimitator = new javax.swing.JCheckBox();
        cmbVrstaPrimanja = new javax.swing.JComboBox<>();
        cmbIsplata = new javax.swing.JComboBox<>();
        cmbRadnik = new javax.swing.JComboBox<>();
        btnOčisti = new javax.swing.JButton();
        txtKolicina = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Obračuni");

        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Radnik");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Isplata");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Vrsta Primanja");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Količina sati");

        lstRadnici.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRadniciValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstRadnici);

        btnDodaj.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDodaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tisaj/obracunplace/pomocno/Button-Add-icon (1).png"))); // NOI18N
        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tisaj/obracunplace/pomocno/Button-Delete-icon.png"))); // NOI18N
        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnPromjeni.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnPromjeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tisaj/obracunplace/pomocno/Button-Refresh-icon.png"))); // NOI18N
        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUvjetKeyReleased(evt);
            }
        });

        chbLimitator.setSelected(true);
        chbLimitator.setText("Limitiraj na 25");

        btnOčisti.setText("Očisti");
        btnOčisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOčistiActionPerformed(evt);
            }
        });

        txtKolicina.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtKolicina.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtKolicina.setText("0.0");

        jScrollPane3.setViewportView(jList1);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Radnici u bazi");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tisaj/obracunplace/pomocno/right.png"))); // NOI18N
        jButton1.setToolTipText("");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tisaj/obracunplace/pomocno/left.png"))); // NOI18N
        jButton2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 51, 51), 1, true));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Obračuni");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(btnPromjeni, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                    .addComponent(cmbIsplata, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbVrstaPrimanja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOčisti, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chbLimitator, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(chbLimitator)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(cmbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(cmbIsplata, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cmbVrstaPrimanja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnDodaj)
                                .addGap(18, 18, 18)
                                .addComponent(btnPromjeni)
                                .addGap(18, 18, 18)
                                .addComponent(btnObrisi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOčisti, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane2))))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Obracun o = new Obracun();
        JSpinner spinner = new JSpinner();

        
          o.setRadnik((Radnik) cmbRadnik.getSelectedItem());  
        

        o.setIsplata((Isplata) cmbIsplata.getSelectedItem());
        o.setVrstaPrimanja((VrstaPrimanja) cmbVrstaPrimanja.getSelectedItem());
        o.setKolicinaSati(Double.parseDouble(txtKolicina.getText()));

        try {
            obradaEntitet.save(o);
            ocistiPolja();
            ucitajPodatke();
        } catch (ObracunPlaceException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        Obracun o = lstEntiteti.getSelectedValue();

        if (o == null) {
            JOptionPane.showConfirmDialog(null, "Prvo odaberite obračun");
        }
        try {
            obradaEntitet.delete(o);
            ucitajPodatke();
            ocistiPolja();
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(null, "Obračun nije obrisan");
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        obracun = lstEntiteti.getSelectedValue();
        if (obracun == null) {
            JOptionPane.showMessageDialog(null, "Prvo odaberite obracun");
            return;
        }
        obracun = preuzmiVrijednosti(obracun);
        spremi(obracun);
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ocistiPolja();
        Obracun o = lstEntiteti.getSelectedValue();

        if (o == null) {
            return;
        }

        modelRadnik = (DefaultComboBoxModel<Radnik>) cmbRadnik.getModel();
        for (int i = 0; i < modelRadnik.getSize(); i++) {
            if (modelRadnik.getElementAt(i).getId() == o.getRadnik().getId()) {
                cmbRadnik.setSelectedIndex(i);
                break;
            }
        }

        modelIsplata = (DefaultComboBoxModel<Isplata>) cmbIsplata.getModel();
        for (int i = 0; i < modelIsplata.getSize(); i++) {
            if (modelIsplata.getElementAt(i).getId() == o.getIsplata().getId()) {
                cmbIsplata.setSelectedIndex(i);
                break;
            }
        }

        modelVrstaPrimanja = (DefaultComboBoxModel<VrstaPrimanja>) cmbVrstaPrimanja.getModel();
        for (int i = 0; i < modelVrstaPrimanja.getSize(); i++) {
            if (modelVrstaPrimanja.getElementAt(i).getId() == o.getVrstaPrimanja().getId()) {
                cmbVrstaPrimanja.setSelectedIndex(i);
                break;
            }
        }

        txtKolicina.setText(String.valueOf(o.getKolicinaSati()));


    }//GEN-LAST:event_lstEntitetiValueChanged

    private void lstRadniciValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRadniciValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstRadniciValueChanged

    private void btnOčistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOčistiActionPerformed
        ocistiPolja();
    }//GEN-LAST:event_btnOčistiActionPerformed

    private void txtUvjetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyReleased
        ucitajEntitete();
    }//GEN-LAST:event_txtUvjetKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void seticon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("obracun.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOčisti;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JCheckBox chbLimitator;
    private javax.swing.JComboBox<Isplata> cmbIsplata;
    private javax.swing.JComboBox<Radnik> cmbRadnik;
    private javax.swing.JComboBox<VrstaPrimanja> cmbVrstaPrimanja;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<Obracun> lstEntiteti;
    private javax.swing.JList<Radnik> lstRadnici;
    private javax.swing.JTextField txtKolicina;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void ocistiPolja() {
        cmbRadnik.setSelectedIndex(0);
        cmbIsplata.setSelectedIndex(0);
        cmbVrstaPrimanja.setSelectedIndex(0);
        txtKolicina.setText("0.0");
    }

    private Obracun preuzmiVrijednosti(Obracun o) {
        o.setRadnik((Radnik) cmbRadnik.getSelectedItem());
        o.setIsplata((Isplata) cmbIsplata.getSelectedItem());
        o.setVrstaPrimanja((VrstaPrimanja) cmbVrstaPrimanja.getSelectedItem());
        o.setKolicinaSati(Double.parseDouble(txtKolicina.getText()));

        return o;
    }

    private void ucitajEntitete() {
        if (chbLimitator.isSelected()) {
            DefaultListModel<Radnik> m = new DefaultListModel<>();
            for (Radnik s : obradaRadnik.getLista(txtUvjet.getText().trim(), chbLimitator.isSelected())) {
                m.addElement(s);
            }
            lstRadnici.setModel(m);
        } else {
            DefaultListModel<Radnik> r = new DefaultListModel<>();
            Radnik rr = new Radnik();
            rr.setIme("Molim");
            rr.setPrezime("pričekati");
            r.addElement(rr);
            lstRadnici.setModel(r);
            DuzeUcitanjeEntiteta d = new DuzeUcitanjeEntiteta();
            d.start();
        }

    }

    private void ucitajRadnike() {

        DefaultListModel<Radnik> r = new DefaultListModel<>();
        for (Radnik m : obradaRadnik.getLista()) {
            r.addElement(m);
        }
        lstRadnici.setModel(r);
    }

    private class DuzeUcitanjeEntiteta extends Thread {

        @Override
        public void run() {
            DefaultListModel<Radnik> m = new DefaultListModel<>();
            for (Radnik s : obradaRadnik.getLista(txtUvjet.getText().trim(), chbLimitator.isSelected())) {
                m.addElement(s);
            }
            lstRadnici.setModel(m);
        }

    }
    
    private void spremi(Obracun o) {
        try {
            obradaEntitet.save(o);
            ocistiPolja();
            ucitajPodatke();
        } catch (ObracunPlaceException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
}
